debug: false
management:
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    com.ansj: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace
spring:
  thymeleaf3:
    decoupled-logic: true
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
  sql:
    init:
      mode: always
  data.rest:
      base-path: /api
      detection-strategy: annotated
  test:
    database:
      replace: none
---
spring:
  config:
    activate:
      on-profile: mysql
  datasource:
    url: jdbc:mysql://localhost:3306/board
    username: ansj
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    defer-datasource-initialization: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
---
spring:
  config:
    activate:
      on-profile: postgresql
  datasource:
    url: jdbc:postgresql://localhost:5432/board
    username: ansj
    password: 1234
    driver-class-name: org.postgresql.Driver
  jpa:
    defer-datasource-initialization: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
---
spring:
  config:
    activate:
      on-profile: testdb
  datasource:
    url: jdbc:h2:mem:board;mode=mysql
    driver-class-name: org.h2.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
  sql:
    init:
      mode: always
  test:
    database:
      replace: none
---
spring:
  config:
    activate:
      on-profile: h2
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: true
---